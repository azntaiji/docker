version: "3.9"
services: 
  nocodb: 
    container_name: nocodb
    depends_on: 
      - nocodb-db
    environment: 
      - "NC_DB=pg://nocodb-db:5432?u=${DATABASE_USER}&p=${DATABASE_PW}&d=${DATABASE_NAME}"
      - "NC_PUBLIC_URL=https://nocodb.zachtaiji.com"
      - NC_DISABLE_TELE=true
    image: "nocodb/nocodb:latest"
    labels: 
      - traefik.enable=true
      - traefik.http.routers.nocodb.entrypoints=web
      - traefik.http.routers.nocodb.rule=Host(`nocodb.zachtaiji.com`)
      - traefik.http.services.nocodb.loadbalancer.server.port=8080
      - traefik.http.routers.nocodb.middlewares=https_redirect@docker,non_www@docker
      - traefik.http.routers.nocodb-secure.entrypoints=websecure
      - traefik.http.routers.nocodb-secure.rule=Host(`nocodb.zachtaiji.com`)
      - traefik.http.routers.nocodb-secure.tls=true
      - traefik.http.routers.nocodb-secure.tls.certresolver=myresolver
      - traefik.docker.network=reverse-proxynet
      - com.centurylinklabs.watchtower.enable=true
    networks: 
      - reverse-proxynet
    restart: always
    volumes: 
      - ./data:/usr/app/data
  nocodb-db: 
    container_name: nocodb-db
    environment: 
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_PASSWORD: "${DATABASE_PW}"
      POSTGRES_USER: "${DATABASE_USER}"
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"
      timeout: 2s
    image: "postgres:12.17-alpine"
    networks: 
      - reverse-proxynet
    restart: always
    volumes: 
      - ./db:/var/lib/postgresql/data
  watchtower: 
    command: "--schedule \"0 5 * * *\" --cleanup --label-enable"
    container_name: watchtower
    image: containrrr/watchtower
    labels: 
      - com.centurylinklabs.watchtower.enable=true
    networks: 
      - reverse-proxynet
    restart: always
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro
networks:
  reverse-proxynet:
    name: reverse-proxynet
    external: true