services:
  teable:
    container_name: teable
    image: ghcr.io/teableio/teable:latest
    restart: always
    external_links:
      - postgres
      - teable-db-migrate
    ports:
      - '3000:3000'
    volumes:
      - ./data:/app/.assets:rw
    env_file:
      - .env
    environment:
      - TZ=${TIMEZONE}
      - NEXT_ENV_IMAGES_ALL_REMOTE=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.teable.entrypoints=web
      - traefik.http.routers.teable.rule=Host(`teable.zachtaiji.com`)
      - traefik.http.services.teable.loadbalancer.server.port=3000
      - traefik.http.routers.teable.middlewares=https_redirect@docker,non_www@docker
      - traefik.http.routers.teable-secure.entrypoints=websecure
      - traefik.http.routers.teable-secure.rule=Host(`teable.zachtaiji.com`)
      - traefik.http.routers.teable-secure.tls=true
      - traefik.http.routers.teable-secure.tls.certresolver=myresolver
      - traefik.docker.network=reverse-proxynet
    networks:
#      - teable-standalone
      - reverse-proxynet
    #depends_on:
    #  teable-db-migrate:
    #    condition: service_completed_successfully

networks:
#  teable-standalone:
#    name: teable-standalone-network
#    driver: bridge
  reverse-proxynet:
    name: reverse-proxynet
    external: true